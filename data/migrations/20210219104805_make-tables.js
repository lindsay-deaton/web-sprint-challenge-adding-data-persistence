exports.up = function(knex) {
  return knex.schema.createTable("Projects", tbl => {
    tbl.increments("project_id")
    tbl.string("project_name")
      .notNullable()
    tbl.string("project_description")
    tbl.boolean("project_completed")
      .defaultTo(false)
  })
    .createTable("Resources", tbl => {
      tbl.increments("resource_id")
      tbl.string("resource_name")
        .notNullable()
        .unique()
      tbl.string("resource_description")
    })
    .createTable("Tasks", tbl => {
      tbl.increments("task_id")
      tbl.string("task_description")
        .notNullable()
      tbl.string("notes")
      tbl.boolean("task_completed")
        .defaultTo(false)
      tbl.integer("project_id")
        .unsigned()
        .notNullable()
        .references("project_id")
        .inTable("Projects")
        .onUpdate("CASCADE")
        .onDelete("CASCADE")
    })
    .createTable("Project_Resources", tbl => {
      tbl.increments("project_resource_id")
      tbl.integer("project_id")
        .unsigned()
        .notNullable()
        .references("project_id")
        .inTable("Projects")
        .onUpdate("CASCADE")
        .onDelete("CASCADE")
      tbl.integer("resource_id")
        .unsigned()
        .notNullable()
        .references("resource_id")
        .inTable("Resources")
        .onUpdate("CASCADE")
        .onDelete("CASCADE")
  })
};

exports.down = function(knex) {
  return knex.schema
    .dropTableIfExists("Project_Resources")
    .dropTableIfExists("Tasks")
    .dropTableIfExists("Resources")
    .dropTableIfExists("Projects")
};
